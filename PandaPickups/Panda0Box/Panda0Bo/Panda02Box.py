#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.9.4 on Thu Dec 12 18:06:49 2019
#

import wx

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class PanPlantFrame1(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: PanPlantFrame1.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((613, 299))
        self.IndentDePlana1 = wx.SpinButton(self, wx.ID_ANY , style=wx.SP_ARROW_KEYS | wx.SP_HORIZONTAL)
        self.IndentSetPlan = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_READONLY)
        self.IndentDeSEdit = wx.ListBox(self, wx.ID_ANY, choices=["Editing", "Modifying","PromptEdit"])
        self.InEditPlan = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_BESTWRAP | wx.TE_MULTILINE | wx.TE_PROCESS_ENTER | wx.TE_PROCESS_TAB)
        self.ViewModPlan = wx.ListBox(self, wx.ID_ANY, choices=["Viewing", "Selecting", "Calling"])
        self.LPind2 = wx.ListBox(self, wx.ID_ANY, choices=["Render", "Base", "Loader"])
        self.PlanExeEnter = wx.Button(self, wx.ID_ANY, "Exe")
        self.PlanExeSave = wx.Button(self, wx.ID_ANY, "Exes\n")
        self.ProcessDirect1 = wx.CheckBox(self, wx.ID_ANY, "To Globals", style=wx.ALIGN_RIGHT)
        self.ProcessDirect2 = wx.CheckBox(self, wx.ID_ANY, "Statements\n\n", style=wx.ALIGN_RIGHT)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_SPIN_DOWN, self.IndPlanSubtract, self.IndentDePlana1)
        self.Bind(wx.EVT_SPIN_UP, self.IndPlanAdd, self.IndentDePlana1)
        self.Bind(wx.EVT_LISTBOX_DCLICK, self.PlanSelect, self.IndentDeSEdit)
        self.Bind(wx.EVT_LISTBOX_DCLICK, self.PlanSelectMo, self.ViewModPlan)
        self.Bind(wx.EVT_LISTBOX_DCLICK, self.PanSelect, self.LPind2)
        self.Bind(wx.EVT_BUTTON, self.PlanExe, self.PlanExeEnter)
        self.Bind(wx.EVT_BUTTON, self.PlanExes, self.PlanExeSave)
        self.Bind(wx.EVT_CHECKBOX, self.DProcess1, self.ProcessDirect1)
        self.Bind(wx.EVT_CHECKBOX, self.DProcess2, self.ProcessDirect2)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: PanPlantFrame1.__set_properties
        self.SetTitle("Panda02Box")
        self.SetBackgroundColour(wx.Colour(167, 167, 219))
        self.IndentSetPlan.SetMinSize((20, 20))
        self.IndentSetPlan.SetBackgroundColour(wx.Colour(50, 153, 204))
        self.InEditPlan.SetMinSize((200, 200))
        self.InEditPlan.SetBackgroundColour(wx.Colour(50, 153, 204))
        self.LPind2.SetMinSize((200, 200))
        self.ProcessDirect2.SetValue(1)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: PanPlantFrame1.__do_layout
        APosition = wx.BoxSizer(wx.HORIZONTAL)
        BPositionD = wx.BoxSizer(wx.VERTICAL)
        BPositionC = wx.BoxSizer(wx.VERTICAL)
        BPositionB = wx.BoxSizer(wx.VERTICAL)
        BPositionA = wx.BoxSizer(wx.VERTICAL)
        BPosition = wx.BoxSizer(wx.VERTICAL)
        APositionB = wx.BoxSizer(wx.HORIZONTAL)
        BPosition.Add((20, 50), 0, wx.EXPAND, 0)
        IndentPlan = wx.StaticText(self, wx.ID_ANY, "Indent Levels:")
        APositionB.Add(IndentPlan, 0, 0, 0)
        APositionB.Add(self.IndentDePlana1, 1, 0, 0)
        APositionB.Add(self.IndentSetPlan, 0, 0, 0)
        BPosition.Add(APositionB, 0, 0, 0)
        APosition.Add(BPosition, 1, wx.EXPAND, 0)
        BPositionA.Add(self.IndentDeSEdit, 0, wx.ALL | wx.EXPAND, 0)
        BPositionA.Add(self.InEditPlan, 1, wx.EXPAND, 0)
        APosition.Add(BPositionA, 1, wx.EXPAND, 0)
        BPositionB.Add((0, 0), 0, 0, 0)
        BPositionB.Add((0, 0), 0, 0, 0)
        APosition.Add(BPositionB, 1, wx.EXPAND, 0)
        BPositionC.Add(self.ViewModPlan, 0, wx.ALL, 0)
        BPositionC.Add(self.LPind2, 2, wx.ALL | wx.EXPAND, 0)
        APosition.Add(BPositionC, 1, wx.EXPAND, 0)
        BPositionD.Add(self.PlanExeEnter, 0, 0, 0)
        BPositionD.Add(self.PlanExeSave, 0, 0, 0)
        BPositionD.Add(self.ProcessDirect1, 0, wx.ALIGN_RIGHT | wx.EXPAND, 0)
        BPositionD.Add(self.ProcessDirect2, 0, wx.ALIGN_RIGHT | wx.EXPAND, 0)
        APosition.Add(BPositionD, 0, wx.ALL | wx.EXPAND, 0)
        APosition.Add((0, 0), 0, 0, 0)
        self.SetSizer(APosition)
        self.Layout()
        # end wxGlade

    def PlanSelect(self, event):  # wxGlade: PanPlantFrame1.<event_handler>
        print("Event handler 'PlanSelect' not implemented!")
        event.Skip()

    def PlanSelectMo(self, event):  # wxGlade: PanPlantFrame1.<event_handler>
        if self.ViewModPlan.GetString(self.ViewModPlan.GetSelection())=="Selecting":
            #self.InEditPlan.Value=self.LPind2.GetString(self.LPind2.GetSelection())
            self.LPind2.Clear()
            for parsein in placepandglobal:
                self.LPind2.Append(parsein)
        
        if self.ViewModPlan.GetString(self.ViewModPlan.GetSelection())=="Viewing":
            self.LPind2.Clear()
            for parsein in placepandstatements:
                self.LPind2.Append(parsein)
            
        if self.ViewModPlan.GetString(self.ViewModPlan.GetSelection())=="Calling":
            self.LPind2.Clear()
            for parsein in placepandglobal:
                self.LPind2.Append(parsein)

    def PanSelect(self, event):  # wxGlade: PanPlantFrame1.<event_handler>
        try:
            if paminprocess.IndentDeSEdit.GetString(self.IndentDeSEdit.GetSelection())=="Modifying": 
                self.InEditPlan.Value=self.LPind2.GetString(self.LPind2.GetSelection())
        
        except Exception as expand:
            print(expand)

    def PlanExe(self, event):  # wxGlade: PanPlantFrame1.<event_handler>
        if paminprocess.IndentDeSEdit.GetString(self.IndentDeSEdit.GetSelection())=="Editing":       
            try:
            
                if self.ViewModPlan.GetString(self.ViewModPlan.GetSelection())=="Calling":
                        proticall2=self.LPind2.GetString(self.LPind2.GetSelection())
                        exec(proticall2+paminprocess.InEditPlan.Value,globals())
                        
                else:
                    nextplanind=self.IndentDePlana1.Value*"    "
                    protiplan=paminprocess.InEditPlan.Value
                    if len(protiplan)>0:
                        if self.ProcessDirect1.IsChecked():
                            global placepandglobal
                            print((nextplanind))
                            placepandglobal.append((nextplanind)+protiplan)
                            
                        if self.ProcessDirect2.IsChecked():
                            global placepandstatements
                            placepandstatements.append((nextplanind)+protiplan)
                                                
                                            
                        #paminprocess.LPind2.Append(paminprocess.InEditPlan.Value)
                    parapro=""""""
                    for pandset in self.LPind2.GetItems():
                        parapro+=pandset
                        parapro+="\n"
                    
                    exec(parapro,globals())
            except Exception as expand:
                print(expand)
                    
        if paminprocess.IndentDeSEdit.GetString(self.IndentDeSEdit.GetSelection())=="Modifying":       
            try:
                #global placepandglobal
                #global placepandstatements
                protiplan=paminprocess.InEditPlan.Value
                self.LPind2.SetString(self.LPind2.GetSelection(),protiplan)
                
                if self.ViewModPlan.GetString(self.ViewModPlan.GetSelection())=="Viewing":
                    placepandstatements[self.LPind2.GetSelection()]=protiplan
                    
                if self.ViewModPlan.GetString(self.ViewModPlan.GetSelection())=="Selecting":
                    placepandglobal[self.LPind2.GetSelection()]=protiplan
                    
                
                if self.ViewModPlan.GetString(self.ViewModPlan.GetSelection())=="Calling":
                    placepandglobal[self.LPind2.GetSelection()]=protiplan
                                        
                
                #exec(paminprocess.InEditPlan.Value,globals())
            except Exception as expand:
                print(expand)
                    
                    
        if paminprocess.IndentDeSEdit.GetString(self.IndentDeSEdit.GetSelection())=="PromptEdit":       
            try:
                #dase                      
                exec(paminprocess.InEditPlan.Value,globals())
            except Exception as expand:
                print(expand)

    def PlanExes(self, event):  # wxGlade: PanPlantFrame1.<event_handler>                
        
        self.PlanExe(event)
        
        sfiout=open("Sfi.txt","w+")
        for listen in paminprocess.LPind2.GetItems():
            sfiout.write(listen)
            sfiout.write("\n")
        sfiout.close()

    def DProcess1(self, event):  # wxGlade: PanPlantFrame1.<event_handler>
        print("Event handler 'DProcess1' not implemented!")
        event.Skip()

    def DProcess2(self, event):  # wxGlade: PanPlantFrame1.<event_handler>
        print("Event handler 'DProcess2' not implemented!")
        event.Skip()

    def IndPlanSubtract(self, event):  # wxGlade: PanPlantFrame1.<event_handler>
        propin=paminprocess.IndentDePlana1.Value
        propin+=-1 
        #paminprocess.IndentDePlana1.Value=propin
        paminprocess.IndentSetPlan.Label=str(propin)
        print(paminprocess.IndentDePlana1.Value)

    def IndPlanAdd(self, event):  # wxGlade: PanPlantFrame1.<event_handler>
        propin=paminprocess.IndentDePlana1.Value
        propin+=1
        #print(paminprocess.IndentDePlana1.Value)
        paminprocess.IndentSetPlan.Value=str(propin)
        print(propin)

# end of class PanPlantFrame1

class Panda02Box(wx.App):
    def OnInit(self):
        self.PandaAssist = PanPlantFrame1(None, wx.ID_ANY, "")
        self.SetTopWindow(self.PandaAssist)
        self.PandaAssist.Show()
        return True

# end of class Panda02Box

if __name__ == "__main__":
    global paminm
    global paminprocess
    global placepandglobal
    global placepandstatements
    placepandglobal=[]
    placepandstatements=[]
    
    pamin = Panda02Box(0)
    paminprocess=pamin.PandaAssist
    pamin.MainLoop()

